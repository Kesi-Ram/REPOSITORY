/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author M304User
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//KACEY ROYCE TYNE SANGBAAN
//CITCS 1G-B
package paymentprocessor;

import javax.swing.JOptionPane;

abstract class Payment {
    protected double amount; // attributes
    protected String cardNumber;

    public Payment(double amount, String cardNumber) {
        this.amount = amount; // constructor
        this.cardNumber = cardNumber;
    }

    public abstract void paymentMethod(); // abstract method
}

class CreditCardPayment extends Payment {
    public CreditCardPayment(double amount, String cardNumber) {
        super(amount, cardNumber); // inheritance
    }

    @Override
    public void paymentMethod() {
        JOptionPane.showMessageDialog(null, "Credit Card Payment of amount: $" + amount + " with card number: " + cardNumber);
    }
}

class DebitCardPayment extends Payment {
    public DebitCardPayment(double amount, String cardNumber) {
        super(amount, cardNumber); // inheritance
    }

    @Override
    public void paymentMethod() {
        JOptionPane.showMessageDialog(null, "Debit Card Payment of amount: $" + amount + " with card number: " + cardNumber);
    }
}

class DigitalWallet extends Payment {
    public DigitalWallet(double amount, String cardNumber) {
        super(amount, cardNumber); // inheritance
    }

    @Override
    public void paymentMethod() {
        JOptionPane.showMessageDialog(null, "Digital Wallet Payment of amount: $" + amount + " with card number: " + cardNumber);
    }
}

public class PaymentProcessor {
    public static void main(String[] args) {
        String options[] = {"CreditCard", "DebitCard", "DigitalWallet", "Exit"}; // JOptionPane options
        String name = "";

        // Input name and validate it
        name = JOptionPane.showInputDialog("Enter name: ");
        if (name == null || !name.matches("[a-zA-Z]*")) { // name string validation
            JOptionPane.showMessageDialog(null, "Invalid Input");
            System.exit(0);  // Exit if name is invalid
        } else {
            JOptionPane.showMessageDialog(null, "Welcome " + name);
        }

        while (true) {
            // Choose payment methods
            int choice = JOptionPane.showOptionDialog(null, "Choose Payment Method", "Payment", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

            String cardNumber = "";

            // Ask for card number until valid
            while (true) {
                cardNumber = JOptionPane.showInputDialog("Enter card number: ");
                if (cardNumber != null && cardNumber.matches("\\d+")) {
                    break;  // valid card number
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid output, please try again");
                }
            }

            // Handle each payment option
            switch (choice) {
                case 0: // CreditCard
                    try {
                        double amount = Double.parseDouble(JOptionPane.showInputDialog("Enter amount to pay: "));
                        Payment ccp = new CreditCardPayment(amount, cardNumber); // new object
                        ccp.paymentMethod(); // call method for displaying info
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Invalid Input, please try again");
                    }
                    break;

                case 1: // DebitCard
                    try {
                        double amount = Double.parseDouble(JOptionPane.showInputDialog("Enter amount to pay: "));
                        Payment dcp = new DebitCardPayment(amount, cardNumber); // new object
                        dcp.paymentMethod(); // call method for displaying info
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Invalid Input");
                    }
                    break;

                case 2: // DigitalWallet
                    try {
                        double amount = Double.parseDouble(JOptionPane.showInputDialog("Enter amount to pay: "));
                        Payment dw = new DigitalWallet(amount, cardNumber); // new object
                        dw.paymentMethod(); // call method for displaying info
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Invalid Input");
                    }
                    break;

                case 3: // Exit
                    JOptionPane.showMessageDialog(null, "Exiting");
                    System.exit(0);  // Exit the program
                    break;
            }
        }
    }
}
